name: Continuous Deployment - Production

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  deploy-production:
    runs-on: ubuntu-latest
    environment: production

    steps:
      # ⬇️ Checkout repository
      - name: Checkout code
        uses: actions/checkout@v4

      # ⬇️ Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      # ⬇️ Update CHANGELOG.md from PR title
      - name: Update CHANGELOG.md from PR title
        if: github.event_name == 'pull_request'
        run: |
          git fetch --prune --unshallow || true

          PR_TITLE="${{ github.event.pull_request.title }}"
          DATE=$(date -u +"%Y-%m-%d")
          
          echo -e "## ${DATE}\n- ${PR_TITLE}\n" >> CHANGELOG.md


      # ⬇️ Commit and push updated CHANGELOG.md
      - name: Commit CHANGELOG.md
        if: github.event_name == 'push'
        run: |
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add CHANGELOG.md
          git commit -m "chore: update CHANGELOG.md [skip ci]" || echo "No changes to commit"
          git push origin main || echo "No changes pushed"

      # ⬇️ Install and test backend
      - name: Install & Test Backend
        working-directory: backend
        run: |
          npm ci
          npm run lint
          npm test

      # ⬇️ Install and test frontend
      - name: Install & Test Frontend
        working-directory: frontend
        run: |
          npm ci
          npm run lint
          npm run build

      # ⬇️ Build Docker images
      - name: Build Docker Images (Production)
        run: |
          docker build -t shoplite-backend:latest ./backend
          docker build -t shoplite-frontend:latest ./frontend

      # ⬇️ Scan backend Docker image for vulnerabilities
      - name: Scan Backend Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: shoplite-backend:latest
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          exit-code: '0'

      # ⬇️ Scan frontend Docker image for vulnerabilities
      - name: Scan Frontend Image with Trivy
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: shoplite-frontend:latest
          severity: CRITICAL,HIGH
          ignore-unfixed: true
          exit-code: '0'

      # ⬇️ Azure login
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # ⬇️ Login to ACR
      - name: Azure Container Registry Login (Production)
        uses: azure/docker-login@v2
        with:
          login-server: ${{ secrets.ACR_LOGIN_SERVER }}
          username: ${{ secrets.ACR_USERNAME }}
          password: ${{ secrets.ACR_PASSWORD }}

      # ⬇️ Push Docker images to ACR
      - name: Push Docker Images (Production)
        run: |
          docker tag shoplite-backend:latest ${{ secrets.ACR_LOGIN_SERVER }}/shoplite-backend:latest
          docker tag shoplite-frontend:latest ${{ secrets.ACR_LOGIN_SERVER }}/shoplite-frontend:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/shoplite-backend:latest
          docker push ${{ secrets.ACR_LOGIN_SERVER }}/shoplite-frontend:latest

      # ⬇️ Deploy backend container to Azure App Service
      - name: Deploy Backend (Production)
        uses: azure/webapps-deploy@v2
        with:
          app-name: shoplite-backend
          images: ${{ secrets.ACR_LOGIN_SERVER }}/shoplite-backend:latest

      # ⬇️ Deploy frontend container to Azure App Service
      - name: Deploy Frontend (Production)
        uses: azure/webapps-deploy@v2
        with:
          app-name: shoplite-frontend
          images: ${{ secrets.ACR_LOGIN_SERVER }}/shoplite-frontend:latest
